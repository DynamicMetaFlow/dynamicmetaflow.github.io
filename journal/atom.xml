<feed xmlns="http://www.w3.org/2005/Atom">
    <generator>Hugo -- gohugo.io</generator>
    <title>
                Journals on
            
        
        Alexander Soto</title>
        <link href="https://www.alexsoto.dev/journal/atom.xml" rel="self" type="application/atom&#43;xml" /><link href="https://www.alexsoto.dev/journal/"/>
    <updated>2019-11-18T18:25:47-05:00</updated>
    <author>
            <name>Alexander Soto</name>
            
                <email>alexander.soto@@gmail.com</email>
            </author>
    <id>https://www.alexsoto.dev/journal/</id>
        
        <entry>
            <title type="html"><![CDATA[Introduction to React - Exercises]]></title>
            <link href="https://www.alexsoto.dev/journal/2019-11-18/"/>
            <id>https://www.alexsoto.dev/journal/2019-11-18/</id>
            
                    <author>
                        <name>Alexander Soto</name>
                    </author>
            <published>2019-11-18T00:00:00-05:00</published>
            <updated>2019-11-18T00:00:00-05:00</updated>
            
            
            <content type="html"><![CDATA[

<h2 id="problem-creating-the-total-component">Problem: Creating the Total component</h2>

<p><strong>Problem:</strong></p>

<p>For <a href="https://fullstackopen.com/en/part1/introduction%5Fto%5Freact#exercises">exercise 1.1 from Full Stack Open</a>, I had to refactor code from the App component to three separate components.</p>

<p>I was able to create the components for Header and Content, I experienced difficulty with the Total component.</p>

<p><strong>Insight:</strong></p>

<p>Received the following error:</p>

<blockquote>
<p>Warning: Received NaN for the `children` attribute. If this is expected, cast the value to a string.</p>
</blockquote>

<p>I believe this is related to the exercises variables being out of scope, or problems with reading a string and an integer.</p>

<p><strong>Tomorrow:</strong></p>

<p>I&rsquo;m going to read over this section tomorrow and break down the problem further.</p>

<h2 id="code-exercise-1-dot-1">Code: Exercise 1.1</h2>
<div class="highlight"><pre class="chroma"><code class="language-javascript" data-lang="javascript"><span class="k">import</span> <span class="nx">React</span> <span class="nx">from</span> <span class="s1">&#39;react&#39;</span><span class="p">;</span>
<span class="k">import</span> <span class="nx">ReactDOM</span> <span class="nx">from</span> <span class="s1">&#39;react-dom&#39;</span><span class="p">;</span>

<span class="k">const</span> <span class="nx">App</span> <span class="o">=</span> <span class="p">()</span> <span class="p">=&gt;</span> <span class="p">{</span>
    <span class="k">const</span> <span class="nx">course</span> <span class="o">=</span> <span class="s1">&#39;Half Stack application development&#39;</span>
    <span class="k">const</span> <span class="nx">part1</span> <span class="o">=</span> <span class="s1">&#39;Fundamentals of React&#39;</span>
    <span class="k">const</span> <span class="nx">exercises1</span> <span class="o">=</span> <span class="mi">10</span>
    <span class="k">const</span> <span class="nx">part2</span> <span class="o">=</span> <span class="s1">&#39;Using props to pass data&#39;</span>
    <span class="k">const</span> <span class="nx">exercises2</span> <span class="o">=</span> <span class="mi">7</span>
    <span class="k">const</span> <span class="nx">part3</span> <span class="o">=</span> <span class="s1">&#39;State of a component&#39;</span>
    <span class="k">const</span> <span class="nx">exercises3</span> <span class="o">=</span> <span class="mi">14</span>

    <span class="k">return</span> <span class="p">(</span>
      <span class="o">&lt;</span><span class="nx">div</span><span class="o">&gt;</span>
        <span class="o">&lt;</span><span class="nx">Header</span> <span class="nx">course</span> <span class="o">=</span> <span class="p">{</span><span class="nx">course</span><span class="p">}</span> <span class="err">/&gt;</span>
        <span class="o">&lt;</span><span class="nx">Content</span> <span class="nx">part1</span> <span class="o">=</span> <span class="p">{</span><span class="nx">part1</span><span class="p">}</span> <span class="nx">exercises1</span> <span class="o">=</span> <span class="p">{</span><span class="nx">exercises1</span><span class="p">}</span><span class="err">/&gt;</span>
        <span class="o">&lt;</span><span class="nx">Content</span> <span class="nx">part2</span> <span class="o">=</span> <span class="p">{</span><span class="nx">part2</span><span class="p">}</span> <span class="nx">exercises2</span> <span class="o">=</span> <span class="p">{</span><span class="nx">exercises2</span><span class="p">}</span><span class="err">/&gt;</span>
        <span class="o">&lt;</span><span class="nx">Content</span> <span class="nx">part3</span> <span class="o">=</span> <span class="p">{</span><span class="nx">part3</span><span class="p">}</span> <span class="nx">exercises3</span> <span class="o">=</span> <span class="p">{</span><span class="nx">exercises3</span><span class="p">}</span><span class="err">/&gt;</span>
        <span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="nb">Number</span> <span class="k">of</span> <span class="nx">exercises</span> <span class="p">{</span><span class="nx">exercises1</span> <span class="o">+</span> <span class="nx">exercises2</span> <span class="o">+</span> <span class="nx">exercises3</span><span class="p">}</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
      <span class="o">&lt;</span><span class="err">/div&gt;</span>
    <span class="p">)</span>
<span class="p">}</span>

<span class="k">const</span> <span class="nx">Header</span> <span class="o">=</span> <span class="p">(</span><span class="nx">props</span><span class="p">)</span> <span class="p">=&gt;</span> <span class="p">{</span>
  <span class="k">return</span> <span class="o">&lt;</span><span class="nx">h1</span><span class="o">&gt;</span><span class="p">{</span><span class="nx">props</span><span class="p">.</span><span class="nx">course</span><span class="p">}</span><span class="o">&lt;</span><span class="err">/h1&gt;</span>
<span class="p">}</span>

<span class="k">const</span> <span class="nx">Content</span> <span class="o">=</span> <span class="p">(</span><span class="nx">props</span><span class="p">)</span> <span class="p">=&gt;</span> <span class="p">{</span>
  <span class="k">return</span> <span class="p">(</span>
    <span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>
    <span class="p">{</span><span class="nx">props</span><span class="p">.</span><span class="nx">part1</span><span class="p">}</span> <span class="p">{</span><span class="nx">props</span><span class="p">.</span><span class="nx">exercises1</span><span class="p">}</span>
    <span class="p">{</span><span class="nx">props</span><span class="p">.</span><span class="nx">part2</span><span class="p">}</span> <span class="p">{</span><span class="nx">props</span><span class="p">.</span><span class="nx">exercises2</span><span class="p">}</span>
    <span class="p">{</span><span class="nx">props</span><span class="p">.</span><span class="nx">part3</span><span class="p">}</span> <span class="p">{</span><span class="nx">props</span><span class="p">.</span><span class="nx">exercises3</span><span class="p">}</span>
    <span class="o">&lt;</span><span class="err">/p&gt;</span>
  <span class="p">)</span>
<span class="p">}</span>

<span class="nx">ReactDOM</span><span class="p">.</span><span class="nx">render</span><span class="p">(</span><span class="o">&lt;</span><span class="nx">App</span> <span class="err">/&gt;, document.getElementById(&#39;root&#39;));</span>
</code></pre></div>]]></content>
            
                 
                    
                 
                    
                 
                    
                
            
        </entry>
    
</feed>
